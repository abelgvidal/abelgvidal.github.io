<?xml-stylesheet href="/rss.xsl" type="text/xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>lpsz</title>
    <link>https://abelgvidal.github.io/</link>
    <description>Recent content on lpsz</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Abel González @</copyright>
    <lastBuildDate>Mon, 23 Dec 2024 20:03:54 +0100</lastBuildDate>
    
        <atom:link href="https://abelgvidal.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    
        <item>
        <title>Reading notes: Ethics for Engineering</title>
        <link>https://abelgvidal.github.io/posts/eticaparaingenieros/</link>
        <pubDate>Mon, 23 Dec 2024 20:03:54 +0100</pubDate>
        
        <guid>https://abelgvidal.github.io/posts/eticaparaingenieros/</guid>
        <description>lpsz https://abelgvidal.github.io/posts/eticaparaingenieros/ -&lt;p&gt;These are my reading notes for the book &amp;ldquo;Ética para ingenieros&amp;rdquo; by Galo Bilbao Alberdi, Francisco Javier Fuertes Pérez and José Mª Guibert Ucín.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://abelgvidal.github.io/images/posts/eticaing.jpg&#34; alt=&#34;Ética para ingenieros&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;the-engineering-profession&#34;&gt;The Engineering Profession&lt;/h2&gt;
&lt;p&gt;Different sociological perspectives explore the meaning of professions, from traditional occupations like doctors or lawyers to modern professions requiring university education. The fundamental aspect of a profession is its unique service to society, a vocation that has intensified with modernity through &amp;ldquo;professionalization.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;There are notable concerns about the excesses of this process, such as the obsession with titles rather than service to society, distinguishing between &amp;ldquo;bad professionalism&amp;rdquo; and &amp;ldquo;good professionalism&amp;rdquo; oriented toward the community. It&amp;rsquo;s crucial to avoid corporatism typical of professions like engineering, recognizing that engineers&amp;rsquo; contributions are not sufficient without collaboration from other parts of society.&lt;/p&gt;
&lt;p&gt;Engineers serve as a bridge between pure sciences and humanities. Social benefits don&amp;rsquo;t materialize in the engineering field per se, but in the application of technologies to other professions, as evidenced during the COVID-19 pandemic with the possibility of continuing education thanks to available technology.&lt;/p&gt;
&lt;h2 id=&#34;analysis-of-social-reality-from-the-technological-revolution&#34;&gt;Analysis of Social Reality from the Technological Revolution&lt;/h2&gt;
&lt;p&gt;Engineering, especially the internet, has accelerated globalization by eliminating barriers in the exchange of ideas and goods. This process links to Adam Smith&amp;rsquo;s liberal ideas, adding Technology as a fourth element alongside Land, Labor, and Capital. In this context, technological knowledge becomes key to social success, explaining the profession&amp;rsquo;s growing prestige.&lt;/p&gt;
&lt;p&gt;Ethics in relation to intellectual property illustrates the contradiction between engineers&amp;rsquo; interests as professionals and as consumers. Informational capitalism, where technology ownership generates economic polarization, also creates new global job opportunities.&lt;/p&gt;
&lt;p&gt;There are significant concerns about the excesses of purely technocratic democracy, where human values can be lost in favor of technical efficiency, calling for more effective regulation of ICTs.&lt;/p&gt;
&lt;h2 id=&#34;ethics-and-the-technoscientific-phenomenon&#34;&gt;Ethics and the Technoscientific Phenomenon&lt;/h2&gt;
&lt;p&gt;STS (Science, Technology, and Society) studies developed in the West since the sixties present multiple perspectives: activists questioning technology&amp;rsquo;s benefits, academics promoting multidisciplinary education, and those seeking a more integrative vision of science.&lt;/p&gt;
&lt;p&gt;Important currents include the &amp;ldquo;strong program&amp;rdquo; explaining science in terms of social interests, the empirical program of relativism, and Actor-Network Theory. These studies warn about the risk of science, without proper contextualization, moving away from social interest.&lt;/p&gt;
&lt;p&gt;Evaluations to prevent social harm must delimit engineers&amp;rsquo; and scientists&amp;rsquo; responsibilities in a balanced way. Different visions of science range from spontaneous to totalizing response, with the &amp;ldquo;critical response&amp;rdquo; emerging as most appropriate.&lt;/p&gt;
&lt;h2 id=&#34;professional-ethics-and-its-guiding-principles&#34;&gt;Professional Ethics and Its Guiding Principles&lt;/h2&gt;
&lt;p&gt;The moral phenomenon operates in two dimensions: good and evil (pursuit of happiness) and justice and fulfillment of duty. These translate into professional ethics and deontology, representing moral maximums and minimums respectively.&lt;/p&gt;
&lt;p&gt;Two common errors emerge: moralism (applying absolute ethical terms without considering professional characteristics) and the separatist thesis (considering that a profession is exempt from universal ethical rules).&lt;/p&gt;
&lt;p&gt;The guiding principles are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Beneficence&lt;/strong&gt;: Prioritizing the profession&amp;rsquo;s internal goods over external ones, avoiding paternalism&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Autonomy&lt;/strong&gt;: Includes self-election, self-legislation, authenticity, and self-decision&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Justice&lt;/strong&gt;: Treating everyone with equity, without seeking self-interest&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;risk-society&#34;&gt;Risk Society&lt;/h2&gt;
&lt;p&gt;Risk management in contemporary engineering is characterized by its globalizing nature and regulatory complexity, with three main approaches:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Technical management: Evaluation using formulas to determine acceptable risks&lt;/li&gt;
&lt;li&gt;Psychological management: Analysis of technically acceptable but humanly unacceptable risks&lt;/li&gt;
&lt;li&gt;Sociological management: Contextualization of risk in historical and social framework&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Risk exchanges include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Displacement: Change between similar risks&lt;/li&gt;
&lt;li&gt;Substitution: Change to different type of risk for the same population&lt;/li&gt;
&lt;li&gt;Transfer: Same type of risk for different population&lt;/li&gt;
&lt;li&gt;Transformation: Change in both type and affected population&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;virtue-prudence&#34;&gt;Virtue: Prudence&lt;/h2&gt;
&lt;p&gt;The concept of prudence in ethics has evolved from the Aristotelian view that considers it fundamental for the contingent, to more modern interpretations by Kant and Smith who see it as a practical skill separate from morality.&lt;/p&gt;
&lt;p&gt;Prudence develops in contexts of uncertainty, requiring flexibility and ethical deliberation between means and ends. Its exercise integrates deontological and consequentialist models, seeking to balance universal values with situational particularities.&lt;/p&gt;
&lt;h2 id=&#34;decision-theory&#34;&gt;Decision Theory&lt;/h2&gt;
&lt;p&gt;Tools for addressing ethical and professional dilemmas include decision analysis under certainty, risk, and ignorance. Game theory provides frameworks for understanding conflicts between self-interest and cooperation, with the prisoner&amp;rsquo;s dilemma as a key example.&lt;/p&gt;
&lt;p&gt;Important contributions include Gauthier&amp;rsquo;s work on rationality and cooperation, and Axelrod&amp;rsquo;s studies on cooperative strategies like &amp;ldquo;tit for tat.&amp;rdquo; The effectiveness of markets in achieving the common good remains a critical question in economics and politics.&lt;/p&gt;
&lt;h2 id=&#34;responsibility&#34;&gt;Responsibility&lt;/h2&gt;
&lt;p&gt;Professional ethics in engineering goes beyond abstract norms, constituting a fundamental element that defines its social impact. Engineers must answer to multiple actors: companies, colleagues, clients, suppliers, and society.&lt;/p&gt;
&lt;p&gt;Balancing corporate loyalty with legal compliance and social responsibility is crucial, especially given growing inequalities and environmental crises. Commitment must exceed mere legal compliance, promoting an active role in building a more equitable future.&lt;/p&gt;
&lt;h2 id=&#34;collective-normativities&#34;&gt;Collective Normativities&lt;/h2&gt;
&lt;p&gt;Deontological codes serve as mechanisms of professional self-regulation, promoting debate about professional impact and establishing international standards. However, they face criticism for their possible rigidity or superficiality.&lt;/p&gt;
&lt;p&gt;In business, implementing ethics faces challenges including public distrust and the risk of instrumentalizing values. The public sector emphasizes principles like integrity and transparency, highlighting the need to strengthen moral communities within institutions.&lt;/p&gt;
- https://abelgvidal.github.io/posts/eticaparaingenieros/ - Abel González @</description>
        </item>
    
    
    
        <item>
        <title>Making Obsidian Talk with Google&#39;s Fancy Wavenet Voices</title>
        <link>https://abelgvidal.github.io/posts/obsidian-wavenet/</link>
        <pubDate>Sun, 15 Dec 2024 20:03:54 +0100</pubDate>
        
        <guid>https://abelgvidal.github.io/posts/obsidian-wavenet/</guid>
        <description>lpsz https://abelgvidal.github.io/posts/obsidian-wavenet/ -&lt;h1 id=&#34;making-obsidian-talk-with-googles-fancy-wavenet-voices-a-quick-hack&#34;&gt;Making Obsidian Talk with Google&amp;rsquo;s Fancy Wavenet Voices: A Quick Hack&lt;/h1&gt;
&lt;p&gt;I&amp;rsquo;m sharing a little hack I put together. As a hardcore &lt;a href=&#34;https://obsidian.md/&#34;&gt;Obsidian&lt;/a&gt; user, I was getting frustrated with the available text-to-speech options.
I really wanted to use Google&amp;rsquo;s Wavenet voices because they sound amazing, but couldn&amp;rsquo;t find a plugin that did exactly what I wanted. So I sorted it out myself.&lt;/p&gt;
&lt;p&gt;I cobbled together a hack using Google Cloud&amp;rsquo;s Text-to-Speech API and Obsidian&amp;rsquo;s Shell Commands plugin. Here&amp;rsquo;s how you can do it too (assuming you&amp;rsquo;re on Linux, if not you need some adjustment):&lt;/p&gt;
&lt;h3 id=&#34;1-set-up-google-cloud&#34;&gt;1. Set Up Google Cloud&lt;/h3&gt;
&lt;p&gt;You need to use Google Cloud:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Create a new project in Google Cloud Console. Create an account first if you don&amp;rsquo;t have one. Use one project for this purpose to not mix things up.&lt;/li&gt;
&lt;li&gt;In APIS, enable the Text-to-Speech API for your project&lt;/li&gt;
&lt;li&gt;Create an IAM service account. Is important to allow only this service, we don&amp;rsquo;t want surprises with the bills.&lt;/li&gt;
&lt;li&gt;Download the JSON credentials file of this user (keep this safe! Don&amp;rsquo;t push it to github! This is money!)&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;2-the-python-script-magic&#34;&gt;2. The Python Script Magic&lt;/h3&gt;
&lt;p&gt;Create a file called &lt;code&gt;read.py&lt;/code&gt;  and drop this basic code in it:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#008b45;text-decoration:underline&#34;&gt;sys&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#008b45;text-decoration:underline&#34;&gt;google.cloud&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;import&lt;/span&gt; texttospeech
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#008b45;text-decoration:underline&#34;&gt;os&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#008b45;text-decoration:underline&#34;&gt;tempfile&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#008b45;text-decoration:underline&#34;&gt;subprocess&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;os.environ[&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;GOOGLE_APPLICATION_CREDENTIALS&amp;#34;&lt;/span&gt;] = &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;/path/to/google-credentials-iam-user.json&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;text_to_speech&lt;/span&gt;(text):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    client = texttospeech.TextToSpeechClient()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    input_text = texttospeech.SynthesisInput(text=text)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    voice = texttospeech.VoiceSelectionParams(
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        language_code=&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;en-EN&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        name=&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;en-EN-Wavenet-B&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    )
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    audio_config = texttospeech.AudioConfig(
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        audio_encoding=texttospeech.AudioEncoding.MP3
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    )
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    response = client.synthesize_speech(
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#658b00&#34;&gt;input&lt;/span&gt;=input_text, voice=voice, audio_config=audio_config
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    )
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;with&lt;/span&gt; tempfile.NamedTemporaryFile(delete=&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;False&lt;/span&gt;, suffix=&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;.mp3&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;as&lt;/span&gt; temp_audio:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        temp_audio.write(response.audio_content)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        temp_audio_path = temp_audio.name
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    subprocess.run([&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;mpv&amp;#34;&lt;/span&gt;, temp_audio_path])
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt; __name__ == &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;__main__&amp;#34;&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#8b008b&#34;&gt;not&lt;/span&gt; sys.stdin.isatty():  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        text = sys.stdin.read()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;elif&lt;/span&gt; &lt;span style=&#34;color:#658b00&#34;&gt;len&lt;/span&gt;(sys.argv) &amp;gt; &lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;:  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        text = &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;.join(sys.argv[&lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;:])
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt; text:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        text_to_speech(text)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;else&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#658b00&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;No text received.&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Make it executable with &lt;code&gt;chmod +x /home/abel/bin/read.py&lt;/code&gt; (adjust the path to wherever you put it).&lt;/p&gt;
&lt;p&gt;You will need to install the Google library for this script. You can install it with pip: &lt;code&gt;pip install google-cloud-texttospeec&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;3-the-obsidian-part&#34;&gt;3. The Obsidian Part&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Install the &amp;ldquo;Shell commands&amp;rdquo; plugin in Obsidian&lt;/li&gt;
&lt;li&gt;Add a new shell command with this awesome oneliner:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/usr/bin/xclip -o | python3 /home/abel/bin/read.py &amp;gt; /dev/null 2&amp;gt;&amp;amp;&lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Use the real route you use for your program!&lt;/p&gt;
&lt;p&gt;What&amp;rsquo;s happening here? &lt;code&gt;xclip -o&lt;/code&gt; grabs whatever text you&amp;rsquo;ve selected, pipes it to our Python script, and we send any output to &lt;code&gt;/dev/null&lt;/code&gt; because we don&amp;rsquo;t want to see clutter output in Obsidian.&lt;/p&gt;
&lt;p&gt;Of course change the paths, unless your name is same as mine :)&lt;/p&gt;
&lt;p&gt;In the plugin options give a name to the command like &amp;ldquo;Read with fancy voice&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;For more comfort, in Obsidian settings hotkeys, associate this command &amp;ldquo;Read with fancy voice&amp;rdquo; with your prefered key binding.
This is how it looks in my Obsidian:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://abelgvidal.github.io/wavenet.png&#34; alt=&#34;obsidian hot key&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;how-to-use-it&#34;&gt;How to Use It&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Select some text in Obsidian and copy it (ctrl+c)&lt;/li&gt;
&lt;li&gt;Trigger the shell command (I set up a hotkey)&lt;/li&gt;
&lt;li&gt;Listen to your notes in a lovely Wavenet voice!&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;some-notes&#34;&gt;Some Notes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;You&amp;rsquo;ll need &lt;code&gt;xclip&lt;/code&gt; installed (&lt;code&gt;sudo apt install xclip&lt;/code&gt; if you don&amp;rsquo;t have it)&lt;/li&gt;
&lt;li&gt;Keep an eye on your Google Cloud usage - while there is a free tier. Pricing is per character, there is a free tier and it&amp;rsquo;s not unlimited and it consumes SSML tags, not only words.&lt;/li&gt;
&lt;li&gt;You can find a full list of available WaveNet voices and their language codes in the Google Cloud documentation: &lt;a href=&#34;https://cloud.google.com/text-to-speech/docs/voices&#34;&gt;https://cloud.google.com/text-to-speech/docs/voices&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;In case you find yourself needing this in two or more languages, you may add an extra argument to the script and create different obsidian commands for every language.&lt;/li&gt;
&lt;li&gt;This may not work if you are using non-native obsidian in linux like flatpak.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;That&amp;rsquo;s it! Now you can have Google&amp;rsquo;s premium voices read your Obsidian notes. Let me know if you make any cool modifications to this setup!&lt;/p&gt;
&lt;p&gt;&lt;em&gt;P.S. Remember to keep your Google Cloud credentials safe and never share them!&lt;/em&gt;&lt;/p&gt;
- https://abelgvidal.github.io/posts/obsidian-wavenet/ - Abel González @</description>
        </item>
    
    
  </channel>
</rss> 